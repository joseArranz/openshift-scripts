apiVersion: v1
kind: Template
metadata:
  name: jenkins-pipeline-template
  annotations:
    description: "jenkins template Pipeline"        
objects:
-       apiVersion: "v1"
        kind: "BuildConfig"
        metadata:
          name: ${APPLICATION_NAME}-jenkins-pipeline
        spec:
          strategy:
            jenkinsPipelineStrategy:
              env:
                - name: "APPLICATION_NAME"
                  value: ${APPLICATION_NAME}
              jenkinsfile: |-
                def templateName = "${APPLICATION_NAME}"
                pipeline {
                  agent any
                  options {
                    timeout(time: 20, unit: 'MINUTES') 
                  }
                  stages {
                    stage('preamble') {
                        steps {
                            script {
                                openshift.withCluster() {
                                    openshift.withProject() {                                
                                        echo "Using project: ${openshift.project()}"
                                        echo "Using App : ${templateName}"
                                    }
                                }
                            }
                        }
                    }
                    stage('build') {
                      steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                  def builds = openshift.selector("bc", templateName).related('builds')
                                  timeout(5) { 
                                    builds.untilEach(1) {
                                      return (it.object().status.phase == "Complete")
                                    }
                                  }
                                }
                            }
                        }
                      }
                    }
                    stage('deploy') {
                      steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                  def rm = openshift.selector("dc", templateName).rollout().latest()
                                  timeout(5) { 
                                    openshift.selector("dc", templateName).related('pods').untilEach(1) {
                                      return (it.object().status.phase == "Running")
                                    }
                                  }
                                }
                            }
                        }
                      }
                    }
                    stage('tag') {
                      steps {
                        script {
                            openshift.withCluster() {
                                openshift.withProject() {
                                  openshift.tag("${templateName}:latest", "${templateName}-staging:latest") 
                                }
                            }
                        }
                      }
                    }
                  }
                }
            type: JenkinsPipeline
parameters:
- description: Aplication Name
  name: APPLICATION_NAME
  value: springcloud
